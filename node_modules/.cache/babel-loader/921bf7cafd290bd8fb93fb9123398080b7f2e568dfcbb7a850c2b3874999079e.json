{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import MyCardDiamond from\"../../page/DiamondCardPage/MyCardDiamond\";import MyCardGold from\"../../page/GoldCardPage/MyCardGold\";import MyCardPinkLady from\"../../page/PinkLadyCardPage/MyCardPinkLady\";import MycardEnterprise from\"../../page/EnterpriseCardPage/MycardEnteprise.js\";import{Fragment as _Fragment,jsx as _jsx}from\"react/jsx-runtime\";function MyUpgradedAccount(){const[account,setAccount]=useState(false);const[accountType,setAccountType]=useState(false);const accSet=()=>{setAccountType(localStorage.getItem(\"accountType\"));// alert(accountType);\n};useEffect(()=>{accSet();});useEffect(()=>{switch(accountType){case\"gold\":default:setAccount(MyCardGold);break;case\"diamond\":setAccount(MyCardDiamond);break;case\"pinkLady\":setAccount(MyCardPinkLady);break;case\"enterprise\":setAccount(MycardEnterprise);break;}},[accountType]);return/*#__PURE__*/_jsx(_Fragment,{children:account});}export default MyUpgradedAccount;","map":{"version":3,"names":["React","useEffect","useState","MyCardDiamond","MyCardGold","MyCardPinkLady","MycardEnterprise","Fragment","_Fragment","jsx","_jsx","MyUpgradedAccount","account","setAccount","accountType","setAccountType","accSet","localStorage","getItem","children"],"sources":["/home/user/Documents/user-dashboard-frontend/src/components/MyUpgradedAccount/MyUpgradedAccount.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MyCardDiamond from \"../../page/DiamondCardPage/MyCardDiamond\";\nimport MyCardGold from \"../../page/GoldCardPage/MyCardGold\";\nimport MyCardPinkLady from \"../../page/PinkLadyCardPage/MyCardPinkLady\";\nimport MycardEnterprise from \"../../page/EnterpriseCardPage/MycardEnteprise.js\";\n\nfunction MyUpgradedAccount() {\n  const [account, setAccount] = useState(false);\n  const [accountType, setAccountType] = useState(false);\n\n  const accSet = () => {\n    setAccountType(localStorage.getItem(\"accountType\"));\n    // alert(accountType);\n  };\n  useEffect(() => {\n    accSet();\n  });\n  useEffect(() => {\n    switch (accountType) {\n      case \"gold\":\n      default:\n        setAccount(MyCardGold);\n        break;\n      case \"diamond\":\n        setAccount(MyCardDiamond);\n        break;\n      case \"pinkLady\":\n        setAccount(MyCardPinkLady);\n        break;\n      case \"enterprise\":\n        setAccount(MycardEnterprise);\n        break;\n    }\n  }, [accountType]);\n  return <>{account}</>;\n}\n\nexport default MyUpgradedAccount;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,aAAa,KAAM,0CAA0C,CACpE,MAAO,CAAAC,UAAU,KAAM,oCAAoC,CAC3D,MAAO,CAAAC,cAAc,KAAM,4CAA4C,CACvE,MAAO,CAAAC,gBAAgB,KAAM,kDAAkD,CAAC,OAAAC,QAAA,IAAAC,SAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEhF,QAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC3B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAErD,KAAM,CAAAc,MAAM,CAAGA,CAAA,GAAM,CACnBD,cAAc,CAACE,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CACnD;AACF,CAAC,CACDjB,SAAS,CAAC,IAAM,CACde,MAAM,CAAC,CAAC,CACV,CAAC,CAAC,CACFf,SAAS,CAAC,IAAM,CACd,OAAQa,WAAW,EACjB,IAAK,MAAM,CACX,QACED,UAAU,CAACT,UAAU,CAAC,CACtB,MACF,IAAK,SAAS,CACZS,UAAU,CAACV,aAAa,CAAC,CACzB,MACF,IAAK,UAAU,CACbU,UAAU,CAACR,cAAc,CAAC,CAC1B,MACF,IAAK,YAAY,CACfQ,UAAU,CAACP,gBAAgB,CAAC,CAC5B,MACJ,CACF,CAAC,CAAE,CAACQ,WAAW,CAAC,CAAC,CACjB,mBAAOJ,IAAA,CAAAF,SAAA,EAAAW,QAAA,CAAGP,OAAO,CAAG,CAAC,CACvB,CAEA,cAAe,CAAAD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import { toast } from \"react-toastify\";\n// import axios from \"axios\";\n\n// const httpClient = axios.create({\n//     baseURL: process.env.REACT_APP_LEVERPAY_API_URL,\n//     timeout: 1000,\n//     headers: {'Authorization': 'Bearer ' + localStorage.getItem(\"_jwt\")}\n// });\n\n// export const signIn = async (userData, jwt, setJwt) => {\n//   if (!jwt) {\n//     const signInURL = \"https://leverpay-api.azurewebsites.net/api/v1/login\";\n//     httpClient.post(signInURL, userData)\n//     .then(response => {\n//       if (response.data.success) {\n//         toast.success(`${response.message}`);\n//         setJwt(`${response.data.token}`);\n//         localStorage.setItem(\"_jwt\", response.data.token)\n//         setTimeout(() => {\n//           window.location.href = \"/\";\n//           }, 2000);\n//       } else {\n//         toast.error(`${response.message}`);\n//       }\n//     })\n//     .catch(err => {\n//       toast.error(err);\n//     })\n//   }\n// };\n\n// export const signUp = async ({ signupData }) => {\n//   httpClient.post(\"/v1/user/signup\", signupData)\n//   .then(response => {\n//     if (response.data.status === 200) {\n//       toast.success(`${response.data.message}`);\n//       localStorage.setItem(\"userEmail\", signupData.email);\n//       setTimeout(() => {\n//         window.location.href = \"/leverpay-signup/signup-OTP\";\n//         }, 2000);\n//     } else {\n//       toast.error(`${response.data.message}`);\n//     }\n//   })\n//   .catch(error => {\n//     console.log(\"Error\", error, \"Sign Up\");\n//   })\n// };\n\n// export const verifyEmail = async (verifyData) => {\n//   httpClient.post(\"/v1/verify-email\")\n//   .then(response => {\n//     if (response.data.status === 200) { // Use response instead of messages\n//       toast.success(`${response.data.message}`);\n//       setTimeout(() => {\n//         window.location.href = \"/signin\";\n//         }, 2000);\n//     } else {\n//       toast.error(`${response.data.message}`);\n//     }\n//   })\n//   .catch((error) => {\n//     //TODO Handle exception\n//     return;\n//   });\n// };\n\n// export const getUserProfile = async (jwt, setJwt, setUser) => {\n//   httpClient.get(\"/v1/user/get-user-profile\")\n//   .then((response) => {\n//     setUser(response.data.data);\n//     localStorage.setItem('user', JSON.stringify(response.data.data))\n//     console.log(\"user found successfully\");\n//   })\n//   .catch((err) => {\n//     console.log(`${err}`);\n//   });\n// };\n\n// export const updateUserProfile = async (jwt, userDataUpdate) => {\n//   httpClient.post(\"/v1/user/update-user-profile\", userDataUpdate)\n//   .then(response => {\n//     toast.success(response.data.message);\n//     setTimeout(() => {\n//       window.location.href = \"/\";\n//       }, 2000);\n//   })\n//   .catch((err) => {\n//     console.log(`${err.message}`);\n//   });\n// };\n\n// export const userResetPassword = async (passwordReset, setJwt) => {\n//   httpClient.post(\"/v1/reset-password\", passwordReset)\n//   .then(response => {\n//     if (response.data.success !== false) {\n//       toast.success(response.data);\n//       setTimeout(() => {\n//         window.location.href = \"/signin\";\n//         setJwt(\"\");\n//         }, 5000);\n//     }\n//     if (response.data.message === \"Error\") {\n//       toast.error(`${response.data.data.new_password}`);\n//     } else {\n//       toast.error(response.data.message);\n//     }\n//   })\n//   .catch((err) => {\n//     toast.error(`${err}`);\n//   });\n// };\n\n// export const logoutUser = async (jwt) => {\n//   httpClient.get(\"/v1/user/logout\")\n//   .then((response) => {\n//     toast.success(response.data.message);\n//     localStorage.removeItem('user')\n//   })\n//   .catch((err) => {\n//     console.log(`${err.message}`);\n//   });\n// };\n\n// export const getCountry = ({ setCountry }) => {\n//   httpClient\n//     .get(\"/v1/get-countries\")\n//     .then((response) => {\n//       setCountry(response.data.data.map((countries) => countries));\n//     })\n//     .catch((err) => {\n//       toast.error(err.message);\n//     });\n// };\n\n// export const getState = ({ countryID, setState }) => {\n//   httpClient\n//     .post(\"https://leverpay-api.azurewebsites.net/api/v1/get-states\", {\n//       country_id: countryID,\n//     })\n//     .then((getStates) => {\n//       setState(getStates.data.data.map((states) => states));\n//     })\n//     .catch((err) => {\n//       toast.error(err.message);\n//     });\n// };\n\n// export const getCities = ({ stateID, setCity }) => {\n//   httpClient\n//     .post(\"https://leverpay-api.azurewebsites.net/api/v1/get-cities\", {\n//       state_id: stateID,\n//     })\n//     .then((getCities) => {\n//       setCity(getCities.data.data.map((cities) => cities));\n//     })\n//     .catch((err) => {\n//       toast.error(err.message);\n//     });\n// };","map":{"version":3,"names":[],"sources":["/home/user/Documents/user-dashboard-frontend/src/services/apiService.js"],"sourcesContent":["// import { toast } from \"react-toastify\";\n// import axios from \"axios\";\n\n// const httpClient = axios.create({\n//     baseURL: process.env.REACT_APP_LEVERPAY_API_URL,\n//     timeout: 1000,\n//     headers: {'Authorization': 'Bearer ' + localStorage.getItem(\"_jwt\")}\n// });\n\n// export const signIn = async (userData, jwt, setJwt) => {\n//   if (!jwt) {\n//     const signInURL = \"https://leverpay-api.azurewebsites.net/api/v1/login\";\n//     httpClient.post(signInURL, userData)\n//     .then(response => {\n//       if (response.data.success) {\n//         toast.success(`${response.message}`);\n//         setJwt(`${response.data.token}`);\n//         localStorage.setItem(\"_jwt\", response.data.token)\n//         setTimeout(() => {\n//           window.location.href = \"/\";\n//           }, 2000);\n//       } else {\n//         toast.error(`${response.message}`);\n//       }\n//     })\n//     .catch(err => {\n//       toast.error(err);\n//     })\n//   }\n// };\n\n// export const signUp = async ({ signupData }) => {\n//   httpClient.post(\"/v1/user/signup\", signupData)\n//   .then(response => {\n//     if (response.data.status === 200) {\n//       toast.success(`${response.data.message}`);\n//       localStorage.setItem(\"userEmail\", signupData.email);\n//       setTimeout(() => {\n//         window.location.href = \"/leverpay-signup/signup-OTP\";\n//         }, 2000);\n//     } else {\n//       toast.error(`${response.data.message}`);\n//     }\n//   })\n//   .catch(error => {\n//     console.log(\"Error\", error, \"Sign Up\");\n//   })\n// };\n\n// export const verifyEmail = async (verifyData) => {\n//   httpClient.post(\"/v1/verify-email\")\n//   .then(response => {\n//     if (response.data.status === 200) { // Use response instead of messages\n//       toast.success(`${response.data.message}`);\n//       setTimeout(() => {\n//         window.location.href = \"/signin\";\n//         }, 2000);\n//     } else {\n//       toast.error(`${response.data.message}`);\n//     }\n//   })\n//   .catch((error) => {\n//     //TODO Handle exception\n//     return;\n//   });\n// };\n\n// export const getUserProfile = async (jwt, setJwt, setUser) => {\n//   httpClient.get(\"/v1/user/get-user-profile\")\n//   .then((response) => {\n//     setUser(response.data.data);\n//     localStorage.setItem('user', JSON.stringify(response.data.data))\n//     console.log(\"user found successfully\");\n//   })\n//   .catch((err) => {\n//     console.log(`${err}`);\n//   });\n// };\n\n// export const updateUserProfile = async (jwt, userDataUpdate) => {\n//   httpClient.post(\"/v1/user/update-user-profile\", userDataUpdate)\n//   .then(response => {\n//     toast.success(response.data.message);\n//     setTimeout(() => {\n//       window.location.href = \"/\";\n//       }, 2000);\n//   })\n//   .catch((err) => {\n//     console.log(`${err.message}`);\n//   });\n// };\n\n// export const userResetPassword = async (passwordReset, setJwt) => {\n//   httpClient.post(\"/v1/reset-password\", passwordReset)\n//   .then(response => {\n//     if (response.data.success !== false) {\n//       toast.success(response.data);\n//       setTimeout(() => {\n//         window.location.href = \"/signin\";\n//         setJwt(\"\");\n//         }, 5000);\n//     }\n//     if (response.data.message === \"Error\") {\n//       toast.error(`${response.data.data.new_password}`);\n//     } else {\n//       toast.error(response.data.message);\n//     }\n//   })\n//   .catch((err) => {\n//     toast.error(`${err}`);\n//   });\n// };\n\n// export const logoutUser = async (jwt) => {\n//   httpClient.get(\"/v1/user/logout\")\n//   .then((response) => {\n//     toast.success(response.data.message);\n//     localStorage.removeItem('user')\n//   })\n//   .catch((err) => {\n//     console.log(`${err.message}`);\n//   });\n// };\n\n// export const getCountry = ({ setCountry }) => {\n//   httpClient\n//     .get(\"/v1/get-countries\")\n//     .then((response) => {\n//       setCountry(response.data.data.map((countries) => countries));\n//     })\n//     .catch((err) => {\n//       toast.error(err.message);\n//     });\n// };\n\n// export const getState = ({ countryID, setState }) => {\n//   httpClient\n//     .post(\"https://leverpay-api.azurewebsites.net/api/v1/get-states\", {\n//       country_id: countryID,\n//     })\n//     .then((getStates) => {\n//       setState(getStates.data.data.map((states) => states));\n//     })\n//     .catch((err) => {\n//       toast.error(err.message);\n//     });\n// };\n\n// export const getCities = ({ stateID, setCity }) => {\n//   httpClient\n//     .post(\"https://leverpay-api.azurewebsites.net/api/v1/get-cities\", {\n//       state_id: stateID,\n//     })\n//     .then((getCities) => {\n//       setCity(getCities.data.data.map((cities) => cities));\n//     })\n//     .catch((err) => {\n//       toast.error(err.message);\n//     });\n// };\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
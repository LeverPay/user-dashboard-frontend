{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/user-dashboard-frontend/src/PrivateRoute/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useTimeout } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useLocalState } from \"../utils/useLocalStorage\";\nimport { toast } from \"react-toastify\";\nimport { useJwt } from \"react-jwt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  let [userToken, setUserToken] = useLocalState(\"\", \"jwt\");\n\n  // const { decodedToken, isExpired } = useJwt(userToken);\n\n  // if (userToken) {\n  //   console.log(\n  //     \"token\",\n  //     new Date(decodedToken.exp * 1000),\n  //     \"is expired?\",\n  //     isExpired\n  //   );\n  //   // if (decodedToken || isExpired === false) {\n  //   //   //session expires after 10 minutes\n  //   //   setTimeout(() => {\n  //   //     setUserToken(\"\");\n  //   //     toast.error(\"Login timeout, Please log in again\");\n  //   //   }, 600000);\n  //   // }\n  // }\n\n  return userToken ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 33\n  }, this);\n};\n_s(PrivateRoute, \"Z6JkZoc2kmyw1xtZV9MsMs+I7P0=\", false, function () {\n  return [useLocalState];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useTimeout","Navigate","useLocalState","toast","useJwt","jsxDEV","_jsxDEV","PrivateRoute","children","_s","userToken","setUserToken","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Documents/user-dashboard-frontend/src/PrivateRoute/PrivateRoute.js"],"sourcesContent":["import React, { useState, useTimeout } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useLocalState } from \"../utils/useLocalStorage\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useJwt } from \"react-jwt\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  let [userToken, setUserToken] = useLocalState(\"\", \"jwt\");\r\n\r\n  // const { decodedToken, isExpired } = useJwt(userToken);\r\n\r\n  // if (userToken) {\r\n  //   console.log(\r\n  //     \"token\",\r\n  //     new Date(decodedToken.exp * 1000),\r\n  //     \"is expired?\",\r\n  //     isExpired\r\n  //   );\r\n  //   // if (decodedToken || isExpired === false) {\r\n  //   //   //session expires after 10 minutes\r\n  //   //   setTimeout(() => {\r\n  //   //     setUserToken(\"\");\r\n  //   //     toast.error(\"Login timeout, Please log in again\");\r\n  //   //   }, 600000);\r\n  //   // }\r\n  // }\r\n\r\n  return userToken ? children : <Navigate to=\"/signin\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;;EAExD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAOQ,SAAS,GAAGF,QAAQ,gBAAGF,OAAA,CAACL,QAAQ;IAACW,EAAE,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACP,EAAA,CAtBIF,YAAY;EAAA,QACgBL,aAAa;AAAA;AAAAe,EAAA,GADzCV,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
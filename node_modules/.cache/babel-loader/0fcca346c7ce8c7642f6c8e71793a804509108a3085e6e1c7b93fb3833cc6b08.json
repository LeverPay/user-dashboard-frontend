{"ast":null,"code":"import React,{useState,useMemo,useEffect}from\"react\";import Select from\"react-select\";// import countryList from \"react-select-country-list\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const CountrySelect=_ref=>{let{countyList,selector,callback}=_ref;const[selected_id,setSelectedId]=useState(\"\");let options;// = useMemo(() => countryList().getData(), []);\nif(countyList&&countyList.data){console.log(\"Save to map\");options=countyList.data.map((opt,index)=>{let labl;if(selector==\"country_name\")labl=opt.country_name;else if(selector==\"state_name\")labl=opt.state_name;else if(selector==\"city_name\")labl=opt.city_name;return{label:labl,value:opt.id};});}const changeHandler=e=>{setSelectedId(e.value);};useEffect(()=>{{if(callback!==undefined)callback(selected_id);}},[selected_id]);return/*#__PURE__*/_jsx(Select,{onChange:changeHandler,options:options});};","map":{"version":3,"names":["React","useState","useMemo","useEffect","Select","jsx","_jsx","CountrySelect","_ref","countyList","selector","callback","selected_id","setSelectedId","options","data","console","log","map","opt","index","labl","country_name","state_name","city_name","label","value","id","changeHandler","e","undefined","onChange"],"sources":["/home/user/Documents/user-dashboard-frontend/src/components/CountrySelect.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\nimport Select from \"react-select\";\n// import countryList from \"react-select-country-list\";\n\nexport const CountrySelect = ({ countyList, selector, callback }) => {\n  const [selected_id, setSelectedId] = useState(\"\");\n  let options; // = useMemo(() => countryList().getData(), []);\n\n  if (countyList && countyList.data) {\n    console.log(\"Save to map\");\n    options = countyList.data.map((opt, index) => {\n      let labl;\n      if (selector == \"country_name\") labl = opt.country_name;\n      else if (selector == \"state_name\") labl = opt.state_name;\n      else if (selector == \"city_name\") labl = opt.city_name;\n      return {\n        label: labl,\n        value: opt.id,\n      };\n    });\n  }\n  const changeHandler = (e) => {\n    setSelectedId(e.value);\n  };\n  useEffect(() => {\n    {\n      if (callback !== undefined) callback(selected_id);\n    }\n  }, [selected_id]);\n  return <Select onChange={changeHandler} options={options} />;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,OAAO,CAAEC,SAAS,KAAQ,OAAO,CAC3D,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,MAAO,MAAM,CAAAC,aAAa,CAAGC,IAAA,EAAwC,IAAvC,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAC9D,KAAM,CAACI,WAAW,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACjD,GAAI,CAAAa,OAAO,CAAE;AAEb,GAAIL,UAAU,EAAIA,UAAU,CAACM,IAAI,CAAE,CACjCC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1BH,OAAO,CAAGL,UAAU,CAACM,IAAI,CAACG,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,GAAK,CAC5C,GAAI,CAAAC,IAAI,CACR,GAAIX,QAAQ,EAAI,cAAc,CAAEW,IAAI,CAAGF,GAAG,CAACG,YAAY,CAAC,IACnD,IAAIZ,QAAQ,EAAI,YAAY,CAAEW,IAAI,CAAGF,GAAG,CAACI,UAAU,CAAC,IACpD,IAAIb,QAAQ,EAAI,WAAW,CAAEW,IAAI,CAAGF,GAAG,CAACK,SAAS,CACtD,MAAO,CACLC,KAAK,CAAEJ,IAAI,CACXK,KAAK,CAAEP,GAAG,CAACQ,EACb,CAAC,CACH,CAAC,CAAC,CACJ,CACA,KAAM,CAAAC,aAAa,CAAIC,CAAC,EAAK,CAC3BhB,aAAa,CAACgB,CAAC,CAACH,KAAK,CAAC,CACxB,CAAC,CACDvB,SAAS,CAAC,IAAM,CACd,CACE,GAAIQ,QAAQ,GAAKmB,SAAS,CAAEnB,QAAQ,CAACC,WAAW,CAAC,CACnD,CACF,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CACjB,mBAAON,IAAA,CAACF,MAAM,EAAC2B,QAAQ,CAAEH,aAAc,CAACd,OAAO,CAAEA,OAAQ,CAAE,CAAC,CAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport axios from \"axios\";\nconst baseURL = \"https://leverpay-api.azurewebsites.net/api\";\nconst httpClient = axios.create({\n  baseURL,\n  timeout: 5000\n});\nconst setAuthHeader = token => {\n  httpClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n};\nexport const signIn = async (userData, jwt, setJwt) => {\n  if (!jwt) {\n    const signInURL = `${baseURL}/v1/login`;\n    console.log(\"Making API request to:\", signInURL);\n    console.log(\"User data:\", userData);\n    try {\n      const response = await httpClient.post(signInURL, userData);\n      if (response.data.success) {\n        const token = response.data.data.token;\n\n        // console.log(\"Token received:\", token);\n\n        if (token) {\n          toast.success(response.data.message);\n          setJwt(token);\n          localStorage.setItem(\"_jwt\", token);\n          setAuthHeader(token);\n          setTimeout(() => {\n            window.location.href = \"/\";\n          }, 2000);\n        } else {\n          toast.error(\"Token is missing in the response.\");\n        }\n      } else {\n        toast.error(response.data.message);\n      }\n    } catch (err) {\n      toast.error(err.message);\n      console.error(\"API call error:\", err);\n    }\n  }\n};\nexport const signUp = async signupData => {\n  try {\n    const response = await httpClient.post(\"/v1/user/signup\", signupData);\n    if (response.data.status === 200) {\n      toast.success(response.data.message);\n      localStorage.setItem(\"userEmail\", signupData.email);\n      setTimeout(() => {\n        window.location.href = \"/leverpay-signup/signup-OTP\";\n      }, 2000);\n    } else {\n      toast.error(response.data.message);\n    }\n  } catch (error) {\n    console.error(\"Sign Up Error:\", error);\n    toast.error(error.message);\n  }\n};\nexport const verifyEmail = async verifyData => {\n  try {\n    const response = await httpClient.post(\"/v1/verify-email\", verifyData);\n    if (response.data.status === 200) {\n      toast.success(response.data.message);\n      setTimeout(() => {\n        window.location.href = \"/signin\";\n      }, 2000);\n    } else {\n      toast.error(response.data.message);\n    }\n  } catch (error) {\n    console.error(\"Verify Email Error:\", error);\n    toast.error(error.message);\n  }\n};\nexport const getUserProfile = async (jwt, setJwt, setUser) => {\n  setAuthHeader(jwt);\n  try {\n    const response = await httpClient.get(\"/v1/user/get-user-profile\");\n    setUser(response.data.data);\n    localStorage.setItem(\"user\", JSON.stringify(response.data.data));\n    console.log(\"User profile retrieved successfully\");\n  } catch (err) {\n    console.error(\"Get User Profile Error:\", err);\n  }\n};\nexport const updateUserProfile = async (jwt, userDataUpdate) => {\n  setAuthHeader(jwt);\n  try {\n    const response = await httpClient.post(\"/v1/user/update-user-profile\", userDataUpdate);\n    toast.success(response.data.message);\n    setTimeout(() => {\n      window.location.href = \"/\";\n    }, 2000);\n  } catch (err) {\n    console.error(\"Update User Profile Error:\", err.message);\n    toast.error(err.message);\n  }\n};\nexport const userResetPassword = async (passwordReset, setJwt) => {\n  try {\n    const response = await httpClient.post(\"/v1/reset-password\", passwordReset);\n    if (response.data.success !== false) {\n      toast.success(response.data.message);\n      setTimeout(() => {\n        window.location.href = \"/signin\";\n        setJwt(\"\");\n      }, 5000);\n    } else {\n      toast.error(response.data.message);\n    }\n  } catch (err) {\n    console.error(\"Reset Password Error:\", err);\n    toast.error(err.message);\n  }\n};\nexport const logoutUser = async () => {\n  try {\n    const response = await httpClient.get(\"/v1/user/logout\");\n    toast.success(response.data.message);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"_jwt\");\n  } catch (err) {\n    console.error(\"Logout Error:\", err.message);\n    toast.error(err.message);\n  }\n};\nexport const getCountry = async setCountry => {\n  try {\n    const response = await httpClient.get(\"/v1/get-countries\");\n    setCountry(response.data.data);\n  } catch (err) {\n    console.error(\"Get Country Error:\", err.message);\n    toast.error(err.message);\n  }\n};\nexport const getState = async (countryID, setState) => {\n  try {\n    const response = await httpClient.post(\"/v1/get-states\", {\n      country_id: countryID\n    });\n    setState(response.data.data);\n  } catch (err) {\n    console.error(\"Get State Error:\", err.message);\n    toast.error(err.message);\n  }\n};\nexport const getCities = async (stateID, setCity) => {\n  try {\n    const response = await httpClient.post(\"/v1/get-cities\", {\n      state_id: stateID\n    });\n    setCity(response.data.data);\n  } catch (err) {\n    console.error(\"Get Cities Error:\", err.message);\n    toast.error(err.message);\n  }\n};","map":{"version":3,"names":["toast","axios","baseURL","httpClient","create","timeout","setAuthHeader","token","defaults","headers","common","signIn","userData","jwt","setJwt","signInURL","console","log","response","post","data","success","message","localStorage","setItem","setTimeout","window","location","href","error","err","signUp","signupData","status","email","verifyEmail","verifyData","getUserProfile","setUser","get","JSON","stringify","updateUserProfile","userDataUpdate","userResetPassword","passwordReset","logoutUser","removeItem","getCountry","setCountry","getState","countryID","setState","country_id","getCities","stateID","setCity","state_id"],"sources":["/home/user/Documents/user-dashboard-frontend/src/services/apiService.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nconst baseURL = \"https://leverpay-api.azurewebsites.net/api\";\n\nconst httpClient = axios.create({\n    baseURL,\n    timeout: 5000,\n});\n\nconst setAuthHeader = (token) => {\n    httpClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n};\n\nexport const signIn = async (userData, jwt, setJwt) => {\n    if (!jwt) {\n        const signInURL = `${baseURL}/v1/login`;\n        console.log(\"Making API request to:\", signInURL);\n        console.log(\"User data:\", userData);\n\n        try {\n            const response = await httpClient.post(signInURL, userData);\n            if (response.data.success) {\n                const token = response.data.data.token;\n\n                // console.log(\"Token received:\", token);\n\n                if (token) {\n                    toast.success(response.data.message);\n                    setJwt(token);\n                    localStorage.setItem(\"_jwt\", token);\n                    setAuthHeader(token);                    \n                    setTimeout(() => {\n                        window.location.href = \"/\";\n                    }, 2000);\n                } else {\n                    toast.error(\"Token is missing in the response.\");\n                }\n            } else {\n                toast.error(response.data.message);\n            }\n        } catch (err) {\n            toast.error(err.message);\n            console.error(\"API call error:\", err);\n        }\n    }\n};\n\n\nexport const signUp = async (signupData) => {\n    try {\n        const response = await httpClient.post(\"/v1/user/signup\", signupData);\n        if (response.data.status === 200) {\n            toast.success(response.data.message);\n            localStorage.setItem(\"userEmail\", signupData.email);\n            setTimeout(() => {\n                window.location.href = \"/leverpay-signup/signup-OTP\";\n            }, 2000);\n        } else {\n            toast.error(response.data.message);\n        }\n    } catch (error) {\n        console.error(\"Sign Up Error:\", error);\n        toast.error(error.message);\n    }\n};\n\nexport const verifyEmail = async (verifyData) => {\n    try {\n        const response = await httpClient.post(\"/v1/verify-email\", verifyData);\n        if (response.data.status === 200) {\n            toast.success(response.data.message);\n            setTimeout(() => {\n                window.location.href = \"/signin\";\n            }, 2000);\n        } else {\n            toast.error(response.data.message);\n        }\n    } catch (error) {\n        console.error(\"Verify Email Error:\", error);\n        toast.error(error.message);\n    }\n};\n\nexport const getUserProfile = async (jwt, setJwt, setUser) => {\n    setAuthHeader(jwt);\n    try {\n        const response = await httpClient.get(\"/v1/user/get-user-profile\");\n        setUser(response.data.data);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.data));\n        console.log(\"User profile retrieved successfully\");\n    } catch (err) {\n        console.error(\"Get User Profile Error:\", err);\n    }\n};\n\nexport const updateUserProfile = async (jwt, userDataUpdate) => {\n    setAuthHeader(jwt);\n    try {\n        const response = await httpClient.post(\"/v1/user/update-user-profile\", userDataUpdate);\n        toast.success(response.data.message);\n        setTimeout(() => {\n            window.location.href = \"/\";\n        }, 2000);\n    } catch (err) {\n        console.error(\"Update User Profile Error:\", err.message);\n        toast.error(err.message);\n    }\n};\n\nexport const userResetPassword = async (passwordReset, setJwt) => {\n    try {\n        const response = await httpClient.post(\"/v1/reset-password\", passwordReset);\n        if (response.data.success !== false) {\n            toast.success(response.data.message);\n            setTimeout(() => {\n                window.location.href = \"/signin\";\n                setJwt(\"\");\n            }, 5000);\n        } else {\n            toast.error(response.data.message);\n        }\n    } catch (err) {\n        console.error(\"Reset Password Error:\", err);\n        toast.error(err.message);\n    }\n};\n\nexport const logoutUser = async () => {\n    try {\n        const response = await httpClient.get(\"/v1/user/logout\");\n        toast.success(response.data.message);\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"_jwt\");\n    } catch (err) {\n        console.error(\"Logout Error:\", err.message);\n        toast.error(err.message);\n    }\n};\n\nexport const getCountry = async (setCountry) => {\n    try {\n        const response = await httpClient.get(\"/v1/get-countries\");\n        setCountry(response.data.data);\n    } catch (err) {\n        console.error(\"Get Country Error:\", err.message);\n        toast.error(err.message);\n    }\n};\n\nexport const getState = async (countryID, setState) => {\n    try {\n        const response = await httpClient.post(\"/v1/get-states\", { country_id: countryID });\n        setState(response.data.data);\n    } catch (err) {\n        console.error(\"Get State Error:\", err.message);\n        toast.error(err.message);\n    }\n};\n\nexport const getCities = async (stateID, setCity) => {\n    try {\n        const response = await httpClient.post(\"/v1/get-cities\", { state_id: stateID });\n        setCity(response.data.data);\n    } catch (err) {\n        console.error(\"Get Cities Error:\", err.message);\n        toast.error(err.message);\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import Swal from \"sweetalert2\";\nexport const forgotPassword = () => {\n  Swal.fire({\n    title: \"Enter email address\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\"\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Request token\",\n    showLoaderOnConfirm: true,\n    preConfirm: async email => {\n      const passResponse = await fetch(\"https://api.leverpay.io/api/v1/forgot-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email\n        })\n      }).then(response => {\n        if (response.status !== 200) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }).catch(error => {\n        Swal.showValidationMessage(`Request failed: ${error}`);\n      });\n      return await passResponse;\n    },\n    allowOutsideClick: () => !Swal.isLoading()\n  }).then(result => {\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: result.value,\n        text: `Please check your inbox for a password reset token`\n      });\n      setTimeout(() => {\n        window.location.href = \"/reset-password\";\n      }, 3000);\n    }\n  });\n};","map":{"version":3,"names":["Swal","forgotPassword","fire","title","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","email","passResponse","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","Error","json","catch","error","showValidationMessage","allowOutsideClick","isLoading","result","isConfirmed","value","text","setTimeout","window","location","href"],"sources":["/home/user/Documents/user-dashboard-frontend/src/services/forgotPassword.js"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nexport const forgotPassword = () => {\r\n  Swal.fire({\r\n    title: \"Enter email address\",\r\n    input: \"text\",\r\n    inputAttributes: {\r\n      autocapitalize: \"off\",\r\n    },\r\n    showCancelButton: true,\r\n    confirmButtonText: \"Request token\",\r\n    showLoaderOnConfirm: true,\r\n    preConfirm: async (email) => {\r\n      const passResponse = await fetch(\r\n        \"https://api.leverpay.io/api/v1/forgot-password\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({ email: email }),\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (response.status !== 200) {\r\n            throw new Error(response.status);\r\n          }\r\n          return response.json();\r\n        })\r\n        .catch((error) => {\r\n          Swal.showValidationMessage(`Request failed: ${error}`);\r\n        });\r\n      return await passResponse;\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading(),\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire({\r\n        title: result.value,\r\n        text: `Please check your inbox for a password reset token`,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        window.location.href = \"/reset-password\";\r\n      }, 3000);\r\n    }\r\n  });\r\n};\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClCD,IAAI,CAACE,IAAI,CAAC;IACRC,KAAK,EAAE,qBAAqB;IAC5BC,KAAK,EAAE,MAAM;IACbC,eAAe,EAAE;MACfC,cAAc,EAAE;IAClB,CAAC;IACDC,gBAAgB,EAAE,IAAI;IACtBC,iBAAiB,EAAE,eAAe;IAClCC,mBAAmB,EAAE,IAAI;IACzBC,UAAU,EAAE,MAAOC,KAAK,IAAK;MAC3B,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAC9B,gDAAgD,EAChD;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,6BAA6B,EAAE,GAAG;UAClCC,MAAM,EAAE;QACV,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK,EAAEA;QAAM,CAAC;MACvC,CACF,CAAC,CACES,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAIC,KAAK,CAACF,QAAQ,CAACC,MAAM,CAAC;QAClC;QACA,OAAOD,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB1B,IAAI,CAAC2B,qBAAqB,CAAE,mBAAkBD,KAAM,EAAC,CAAC;MACxD,CAAC,CAAC;MACJ,OAAO,MAAMd,YAAY;IAC3B,CAAC;IACDgB,iBAAiB,EAAEA,CAAA,KAAM,CAAC5B,IAAI,CAAC6B,SAAS,CAAC;EAC3C,CAAC,CAAC,CAACT,IAAI,CAAEU,MAAM,IAAK;IAClB,IAAIA,MAAM,CAACC,WAAW,EAAE;MACtB/B,IAAI,CAACE,IAAI,CAAC;QACRC,KAAK,EAAE2B,MAAM,CAACE,KAAK;QACnBC,IAAI,EAAG;MACT,CAAC,CAAC;MAEFC,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,iBAAiB;MAC1C,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
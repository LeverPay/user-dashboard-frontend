{"ast":null,"code":"import React from\"react\";import{Container,Col,Row,Form,Button}from\"react-bootstrap\";import Logo from\"../../assets/images/halfLogo_white.png\";import\"./MySubscriptionComponent.css\";import{useState}from\"react\";import SubscriptionConfirmModal from\"./SubscriptionConfirmModal/SubscriptionConfirmModal\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MySubscriptionComponent=()=>{const inputRef=/*#__PURE__*/React.createRef();const[subscriptionType,setSubscriptionType]=useState(\"\");const[subscription,setSubscription]=useState([{id:1,subType:\"Monthly\"},{id:2,subType:\"3 Months\"},{id:3,subType:\"Yearly\"}]);const[amount,setAmount]=useState(\"\");const[discount,setDiscount]=useState(\"1\");const[vat,setVat]=useState(\"7.5\");const[payNow,setPayNow]=useState({});const[subscriptionConfirm,setSubscriptionConfirm]=useState(false);const subscriptionText=\"Select Subscription Type\";const[subscriptionError,setSubscriptionError]=useState(\"\");const handlePayNow=()=>{if(subscriptionType===\"\"||subscriptionType===subscriptionText||amount===\"\"){setSubscriptionError(\"All fields are required!\");return;}else if(subscriptionType!==subscriptionText){setSubscriptionError(\"\");const transaction_fee=10.0;const discountValue=Number(amount)*0.99;const totalAmount=Number(discountValue*(1+vat/100)+transaction_fee).toFixed(2);setPayNow({vendor:\"NETFLIX\",subscriptionType:subscriptionType,amount:amount,discount:discount,vat:vat,transactionFee:10.0,total:totalAmount});setSubscriptionConfirm(true);}};return/*#__PURE__*/_jsxs(Container,{md:4,sm:6,lg:12,className:\"subscription-container\",children:[/*#__PURE__*/_jsxs(Col,{className:\"subscription-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:Logo,alt:\"leverpay-logo\",className:\"company-half-logo\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"subscription-text\",children:\"MY SUBSCRIPTION\"})]}),/*#__PURE__*/_jsxs(Row,{className:\"subscription-form\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"subscription-error\",children:subscriptionError}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"subscription-type\",className:\"subscription-label type-label\",children:\"Subscription Type Monthly/yearly\"}),/*#__PURE__*/_jsxs(Form.Select,{\"aria-label\":\"Default select example\",className:\"select-subscription\",onChange:e=>setSubscriptionType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{children:subscriptionText}),subscription.map(sub=>{return/*#__PURE__*/_jsx(\"option\",{value:sub.subType,children:sub.subType},sub.subType);})]}),\"\\xA0\",/*#__PURE__*/_jsxs(Row,{className:\"\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"subscription-amount\",className:\"subscription-label input-label\",children:\"Amount\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",className:\"subscription-input\",value:amount,name:\"amount\",ref:inputRef,placeholder:\"\",onChange:e=>setAmount(e.target.value.replace(/\\D/g,\"\")),required:true})]}),\"\\xA0\",/*#__PURE__*/_jsxs(Row,{className:\"\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"subscription-amount\",className:\"subscription-label input-label\",children:\"Discount(%)\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",className:\"subscription-input\",value:discount,name:\"discount\",ref:inputRef,placeholder:\"\",onChange:e=>setDiscount(e.target.value),required:true,disabled:true})]}),\"\\xA0\",/*#__PURE__*/_jsxs(Row,{className:\"\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"subscription-amount\",className:\"subscription-label input-label\",children:\"VAT(%)\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",className:\"subscription-input\",value:vat,name:\"vat\",ref:inputRef,placeholder:\"\",onChange:e=>setVat(e.target.value),required:true,disabled:true})]})]}),/*#__PURE__*/_jsxs(Col,{className:\"button-container\",children:[/*#__PURE__*/_jsx(Button,{className:\"subscription-button\",onClick:handlePayNow,children:\"PAY NOW\"}),/*#__PURE__*/_jsx(Button,{className:\"subscription-button subscription-save\",children:\"SAVE\"})]})]})]}),/*#__PURE__*/_jsx(SubscriptionConfirmModal,{payNow:payNow,subscriptionConfirm:subscriptionConfirm,setSubscriptionConfirm:setSubscriptionConfirm})]});};export default MySubscriptionComponent;","map":{"version":3,"names":["React","Container","Col","Row","Form","Button","Logo","useState","SubscriptionConfirmModal","jsx","_jsx","jsxs","_jsxs","MySubscriptionComponent","inputRef","createRef","subscriptionType","setSubscriptionType","subscription","setSubscription","id","subType","amount","setAmount","discount","setDiscount","vat","setVat","payNow","setPayNow","subscriptionConfirm","setSubscriptionConfirm","subscriptionText","subscriptionError","setSubscriptionError","handlePayNow","transaction_fee","discountValue","Number","totalAmount","toFixed","vendor","transactionFee","total","md","sm","lg","className","children","src","alt","Group","Label","htmlFor","Select","onChange","e","target","value","map","sub","Control","type","name","ref","placeholder","replace","required","disabled","onClick"],"sources":["/home/user/Documents/user-dashboard-frontend/src/components/MySubscriptionComponent/MySubscriptionComponent.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\r\nimport Logo from \"../../assets/images/halfLogo_white.png\";\r\nimport \"./MySubscriptionComponent.css\";\r\nimport { useState } from \"react\";\r\nimport SubscriptionConfirmModal from \"./SubscriptionConfirmModal/SubscriptionConfirmModal\";\r\n\r\nconst MySubscriptionComponent = () => {\r\n  const inputRef = React.createRef();\r\n  const [subscriptionType, setSubscriptionType] = useState(\"\");\r\n  const [subscription, setSubscription] = useState([\r\n    {\r\n      id: 1,\r\n      subType: \"Monthly\",\r\n    },\r\n    {\r\n      id: 2,\r\n      subType: \"3 Months\",\r\n    },\r\n    {\r\n      id: 3,\r\n      subType: \"Yearly\",\r\n    },\r\n  ]);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [discount, setDiscount] = useState(\"1\");\r\n  const [vat, setVat] = useState(\"7.5\");\r\n  const [payNow, setPayNow] = useState({});\r\n  const [subscriptionConfirm, setSubscriptionConfirm] = useState(false);\r\n  const subscriptionText = \"Select Subscription Type\";\r\n  const [subscriptionError, setSubscriptionError] = useState(\"\");\r\n\r\n  const handlePayNow = () => {\r\n    if (\r\n      subscriptionType === \"\" ||\r\n      subscriptionType === subscriptionText ||\r\n      amount === \"\"\r\n    ) {\r\n      setSubscriptionError(\"All fields are required!\");\r\n      return;\r\n    } else if (subscriptionType !== subscriptionText) {\r\n      setSubscriptionError(\"\");\r\n      const transaction_fee = 10.0;\r\n      const discountValue = Number(amount) * 0.99;\r\n      const totalAmount = Number(\r\n        discountValue * (1 + vat / 100) + transaction_fee\r\n      ).toFixed(2);\r\n\r\n      setPayNow({\r\n        vendor: \"NETFLIX\",\r\n        subscriptionType: subscriptionType,\r\n        amount: amount,\r\n        discount: discount,\r\n        vat: vat,\r\n        transactionFee: 10.0,\r\n        total: totalAmount,\r\n      });\r\n\r\n      setSubscriptionConfirm(true);\r\n    }\r\n  };\r\n  return (\r\n    <Container md={4} sm={6} lg={12} className=\"subscription-container\">\r\n      <Col className=\"subscription-header\">\r\n        <img src={Logo} alt=\"leverpay-logo\" className=\"company-half-logo\" />\r\n        <h1 className=\"subscription-text\">MY SUBSCRIPTION</h1>\r\n      </Col>\r\n      <Row className=\"subscription-form\">\r\n        {<p className=\"subscription-error\">{subscriptionError}</p>}\r\n        <Form>\r\n          <Form.Group className=\"\">\r\n            <Form.Label\r\n              htmlFor=\"subscription-type\"\r\n              className=\"subscription-label type-label\"\r\n            >\r\n              Subscription Type Monthly/yearly\r\n            </Form.Label>\r\n            <Form.Select\r\n              aria-label=\"Default select example\"\r\n              className=\"select-subscription\"\r\n              onChange={(e) => setSubscriptionType(e.target.value)}\r\n            >\r\n              <option>{subscriptionText}</option>\r\n              {subscription.map((sub) => {\r\n                return <option value={sub.subType} key={sub.subType} >{sub.subType}</option>;\r\n              })}\r\n            </Form.Select>\r\n            &nbsp;\r\n            <Row className=\"\">\r\n              <Form.Label\r\n                htmlFor=\"subscription-amount\"\r\n                className=\"subscription-label input-label\"\r\n              >\r\n                Amount\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"subscription-input\"\r\n                value={amount}\r\n                name=\"amount\"\r\n                ref={inputRef}\r\n                placeholder=\"\"\r\n                onChange={(e) => setAmount(e.target.value.replace(/\\D/g, \"\"))}\r\n                required\r\n              />\r\n            </Row>\r\n            &nbsp;\r\n            <Row className=\"\">\r\n              <Form.Label\r\n                htmlFor=\"subscription-amount\"\r\n                className=\"subscription-label input-label\"\r\n              >\r\n                Discount(%)\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"subscription-input\"\r\n                value={discount}\r\n                name=\"discount\"\r\n                ref={inputRef}\r\n                placeholder=\"\"\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n                required\r\n                disabled\r\n              />\r\n            </Row>\r\n            &nbsp;\r\n            <Row className=\"\">\r\n              <Form.Label\r\n                htmlFor=\"subscription-amount\"\r\n                className=\"subscription-label input-label\"\r\n              >\r\n                VAT(%)\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"subscription-input\"\r\n                value={vat}\r\n                name=\"vat\"\r\n                ref={inputRef}\r\n                placeholder=\"\"\r\n                onChange={(e) => setVat(e.target.value)}\r\n                required\r\n                disabled\r\n              />\r\n            </Row>\r\n          </Form.Group>\r\n          <Col className=\"button-container\">\r\n            <Button className=\"subscription-button\" onClick={handlePayNow}>\r\n              PAY NOW\r\n            </Button>\r\n            <Button className=\"subscription-button subscription-save\">\r\n              SAVE\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Row>\r\n      <SubscriptionConfirmModal\r\n        payNow={payNow}\r\n        subscriptionConfirm={subscriptionConfirm}\r\n        setSubscriptionConfirm={setSubscriptionConfirm}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MySubscriptionComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/user-dashboard-frontend/src/components/ImageSelectComponent/ImageSelectComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { MdOutlineEdit, MdDeleteOutline } from \"react-icons/md\";\nimport avatar from \"../../assets/images/avatar.png\";\nimport ImageSelectModal from \"./ImageSelectModal\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"./ImageSelectComponent.css\";\n// import \"../ImageComponent/ImageComponent.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageSelectComponent = ({\n  currentImage,\n  setCurrentImage,\n  originalImage,\n  setOriginalImage\n}) => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [validImage, setValidImage] = useState(true);\n  const getImage = e => {\n    const imageType = e.target.files[0].type;\n    if (imageType !== \"image/jpg\" && imageType !== \"image/jpeg\" && imageType !== \"image/png\") {\n      toast.error(\"Invalid file format\");\n      setValidImage(false);\n    }\n    setCurrentImage(e.target.files[0]);\n    setOriginalImage(e.target.files[0]);\n  };\n  const uploadImg = () => {\n    if (currentImage.length !== 0) {\n      const newImage = setCurrentImage(URL.createObjectURL(currentImage));\n      setModalOpen(false);\n      return newImage;\n    } else {\n      setCurrentImage(currentImage);\n    }\n    setModalOpen(false);\n  };\n  const handleRemoveImage = () => {\n    setCurrentImage(!currentImage ? avatar : avatar);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-control\",\n      children: [/*#__PURE__*/_jsxDEV(ImageSelectModal, {\n        modalOpen: modalOpen,\n        setModalOpen: setModalOpen,\n        getImage: getImage,\n        uploadImg: uploadImg,\n        currentImage: currentImage,\n        validImage: validImage\n        //setValidImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img_box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentImage ? currentImage : avatar,\n          alt: \"\",\n          className: \"profile-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"change-img\",\n        onClick: () => setModalOpen(true),\n        children: [\"Change \", /*#__PURE__*/_jsxDEV(MdOutlineEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"#fff\",\n        className: \"remove-img\",\n        onClick: handleRemoveImage,\n        children: [\"Remove \", /*#__PURE__*/_jsxDEV(MdDeleteOutline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ImageSelectComponent, \"R+aclNTvIkDazSXwOceP6Md18wc=\");\n_c = ImageSelectComponent;\nexport default ImageSelectComponent;\nvar _c;\n$RefreshReg$(_c, \"ImageSelectComponent\");","map":{"version":3,"names":["React","useState","Button","MdOutlineEdit","MdDeleteOutline","avatar","ImageSelectModal","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageSelectComponent","currentImage","setCurrentImage","originalImage","setOriginalImage","_s","modalOpen","setModalOpen","validImage","setValidImage","getImage","e","imageType","target","files","type","error","uploadImg","length","newImage","URL","createObjectURL","handleRemoveImage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","variant","onClick","_c","$RefreshReg$"],"sources":["/home/user/Documents/user-dashboard-frontend/src/components/ImageSelectComponent/ImageSelectComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { MdOutlineEdit, MdDeleteOutline } from \"react-icons/md\";\r\nimport avatar from \"../../assets/images/avatar.png\";\r\nimport ImageSelectModal from \"./ImageSelectModal\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"./ImageSelectComponent.css\";\r\n// import \"../ImageComponent/ImageComponent.css\";\r\nconst ImageSelectComponent = ({\r\n  currentImage,\r\n  setCurrentImage,\r\n  originalImage,\r\n  setOriginalImage,\r\n}) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [validImage, setValidImage] = useState(true);\r\n\r\n  const getImage = (e) => {\r\n    const imageType = e.target.files[0].type;\r\n    if (\r\n      imageType !== \"image/jpg\" &&\r\n      imageType !== \"image/jpeg\" &&\r\n      imageType !== \"image/png\"\r\n    ) {\r\n      toast.error(\"Invalid file format\");\r\n      setValidImage(false);\r\n    }\r\n    setCurrentImage(e.target.files[0]);\r\n    setOriginalImage(e.target.files[0]);\r\n  };\r\n\r\n  const uploadImg = () => {\r\n    if (currentImage.length !== 0) {\r\n      const newImage = setCurrentImage(URL.createObjectURL(currentImage));\r\n      setModalOpen(false);\r\n      return newImage;\r\n    } else {\r\n      setCurrentImage(currentImage);\r\n    }\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const handleRemoveImage = () => {\r\n    setCurrentImage(!currentImage ? avatar : avatar);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"upload-control\">\r\n        <ImageSelectModal\r\n          modalOpen={modalOpen}\r\n          setModalOpen={setModalOpen}\r\n          getImage={getImage}\r\n          uploadImg={uploadImg}\r\n          currentImage={currentImage}\r\n          validImage={validImage}\r\n          //setValidImage\r\n        />\r\n        {/* image tag */}\r\n        <div className=\"img_box\">\r\n          <img\r\n            src={currentImage ? currentImage : avatar}\r\n            alt=\"\"\r\n            className=\"profile-img\"\r\n          />\r\n        </div>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"change-img\"\r\n          onClick={() => setModalOpen(true)}\r\n        >\r\n          Change <MdOutlineEdit />\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"#fff\"\r\n          className=\"remove-img\"\r\n          onClick={handleRemoveImage}\r\n        >\r\n          Remove <MdDeleteOutline />\r\n        </Button>\r\n      </div>\r\n\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSelectComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState}from\"react\";import Button from\"react-bootstrap/Button\";import Form from\"react-bootstrap/Form\";import ToggleSwitch from\"../../components/ToggleSwitch/ToggleSwitch\";import\"../../page/SettingsPage/Settings.css\";import Swal from\"sweetalert2\";import{AiOutlineEye}from\"react-icons/ai\";import{ToastContainer,toast}from\"react-toastify\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const[isToggled,setIsToggled]=useState(false);const[settingsPasswordType,setSettingsPasswordType]=useState(\"password\");const[settingsPassword,setSettingsPassword]=useState(\"\");const[confirmSettingsPassword,setConfirmSettingsPassword]=useState(\"\");const valSettingsPassword=()=>settingsPassword===confirmSettingsPassword;//alert(isToggled);\nconst handleIcon=reveal=>{reveal=settingsPasswordType===\"password\"?setSettingsPasswordType(\"text\"):setSettingsPasswordType(\"password\");return reveal;};const saveChanges=e=>{e.preventDefault();Swal.fire({title:\"Leverpay.io\",text:\"Do you want to save the changes?\",showDenyButton:true,showCancelButton:true,confirmButtonText:\"Save\",denyButtonText:\"Don't save\"}).then(result=>{/* Read more about isConfirmed, isDenied below */if(result.isConfirmed){toast.success(\"Saved successfully\");}else if(result.isDenied){toast.error(\"Changes were not saved\");}});};return/*#__PURE__*/_jsx(\"div\",{className:\"outer-div\",children:/*#__PURE__*/_jsxs(Form,{className:\"myForm\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"heading\",children:\" Two Factor Authentication\"}),/*#__PURE__*/_jsx(\"small\",{className:\"notice\",children:\"We'll ask you for a code to confirm its you logging into your account\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 toggle-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-10\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Via SMS or Email.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"A code will be sent to you via email or sms\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2 switchbtn\",children:/*#__PURE__*/_jsx(ToggleSwitch,{isToggled:isToggled,onToggle:()=>setIsToggled(!isToggled)})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-fields-div\",children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 change-password\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"form-label labels\",children:\"Current Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:settingsPasswordType,placeholder:\"Enter current password\",className:\"text-area \",required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 new-password\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"form-label labels\",children:\" New Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:settingsPasswordType,placeholder:\"Ensure password contains atleast 10 characters\",className:\"text-area \",value:settingsPassword,onChange:e=>setSettingsPassword(e.target.value)}),/*#__PURE__*/_jsx(AiOutlineEye,{size:20,onClick:handleIcon,className:\"set-eye-icon\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 confirm-password\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"form-label labels\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:settingsPasswordType,name:\"password\",placeholder:\"\",className:\"text-area\",value:confirmSettingsPassword,onChange:e=>setConfirmSettingsPassword(e.target.value)}),/*#__PURE__*/_jsx(AiOutlineEye,{size:20,onClick:handleIcon,className:\"set-eye-icon\"}),!valSettingsPassword()&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:\"Passwords do no match\"})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"buttons-div\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"save-changes\",onClick:saveChanges,children:\"Save Changes\"})}),/*#__PURE__*/_jsx(ToastContainer,{})]})})// rounded={true}\n;};export default Settings;","map":{"version":3,"names":["React","useState","Button","Form","ToggleSwitch","Swal","AiOutlineEye","ToastContainer","toast","jsx","_jsx","jsxs","_jsxs","Settings","isToggled","setIsToggled","settingsPasswordType","setSettingsPasswordType","settingsPassword","setSettingsPassword","confirmSettingsPassword","setConfirmSettingsPassword","valSettingsPassword","handleIcon","reveal","saveChanges","e","preventDefault","fire","title","text","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","success","isDenied","error","className","children","onToggle","Group","Label","Control","type","placeholder","required","value","onChange","target","size","onClick","name","variant"],"sources":["/home/user/Documents/user-dashboard-frontend/src/page/SettingsPage/Settings.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ToggleSwitch from \"../../components/ToggleSwitch/ToggleSwitch\";\r\nimport \"../../page/SettingsPage/Settings.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { AiOutlineEye } from \"react-icons/ai\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nconst Settings = () => {\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const [settingsPasswordType, setSettingsPasswordType] = useState(\"password\");\r\n  const [settingsPassword, setSettingsPassword] = useState(\"\");\r\n  const [confirmSettingsPassword, setConfirmSettingsPassword] = useState(\"\");\r\n\r\n  const valSettingsPassword = () =>\r\n    settingsPassword === confirmSettingsPassword;\r\n  //alert(isToggled);\r\n\r\n  const handleIcon = (reveal) => {\r\n    reveal =\r\n      settingsPasswordType === \"password\"\r\n        ? setSettingsPasswordType(\"text\")\r\n        : setSettingsPasswordType(\"password\");\r\n\r\n    return reveal;\r\n  };\r\n  const saveChanges = (e) => {\r\n    e.preventDefault();\r\n    Swal.fire({\r\n      title: \"Leverpay.io\",\r\n      text: \"Do you want to save the changes?\",\r\n      showDenyButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Save\",\r\n      denyButtonText: `Don't save`,\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        toast.success(\"Saved successfully\");\r\n      } else if (result.isDenied) {\r\n        toast.error(\"Changes were not saved\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"outer-div\">\r\n      <Form className=\"myForm\">\r\n        <h4 className=\"heading\"> Two Factor Authentication</h4>\r\n        <small className=\"notice\">\r\n          We'll ask you for a code to confirm its you logging into your account\r\n        </small>\r\n        <div className=\"col-md-12 toggle-content\">\r\n          <div className=\"col-md-10\">\r\n            <p className=\"text-muted\">Via SMS or Email.</p>\r\n            <p className=\"text-muted\">\r\n              A code will be sent to you via email or sms\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-2 switchbtn\">\r\n            <ToggleSwitch\r\n              isToggled={isToggled}\r\n              onToggle={() => setIsToggled(!isToggled)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-fields-div\">\r\n          <Form.Group className=\"mb-3 change-password\">\r\n            <Form.Label className=\"form-label labels\">\r\n              Current Password\r\n            </Form.Label>\r\n            <Form.Control\r\n              type={settingsPasswordType}\r\n              placeholder=\"Enter current password\"\r\n              className=\"text-area \"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3 new-password\">\r\n            <Form.Label className=\"form-label labels\"> New Password</Form.Label>\r\n            <Form.Control\r\n              type={settingsPasswordType}\r\n              placeholder=\"Ensure password contains atleast 10 characters\"\r\n              className=\"text-area \"\r\n              value={settingsPassword}\r\n              onChange={(e) => setSettingsPassword(e.target.value)}\r\n            />\r\n            <AiOutlineEye\r\n              size={20}\r\n              onClick={handleIcon}\r\n              className=\"set-eye-icon\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3 confirm-password\">\r\n            <Form.Label className=\"form-label labels\">\r\n              Confirm Password\r\n            </Form.Label>\r\n            <Form.Control\r\n              type={settingsPasswordType}\r\n              name=\"password\"\r\n              placeholder=\"\"\r\n              className=\"text-area\"\r\n              value={confirmSettingsPassword}\r\n              onChange={(e) => setConfirmSettingsPassword(e.target.value)}\r\n            />\r\n            <AiOutlineEye\r\n              size={20}\r\n              onClick={handleIcon}\r\n              className=\"set-eye-icon\"\r\n            />\r\n            {!valSettingsPassword() && (\r\n              <p className=\"error\">Passwords do no match</p>\r\n            )}\r\n          </Form.Group>\r\n        </div>\r\n        <br />\r\n        <div className=\"buttons-div\">\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            className=\"save-changes\"\r\n            onClick={saveChanges}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </div>\r\n        <ToastContainer />\r\n      </Form>\r\n    </div>\r\n    // rounded={true}\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/user-dashboard-frontend/src/components/CountrySelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport Select from \"react-select\";\n// import countryList from \"react-select-country-list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountrySelect = ({\n  countyList,\n  selector,\n  callback\n}) => {\n  _s();\n  const [selected_id, setSelectedId] = useState(\"\");\n  let options; // = useMemo(() => countryList().getData(), []);\n\n  if (countyList && countyList.data) {\n    console.log(\"Save to map\");\n    options = countyList.data.map((opt, index) => {\n      let labl;\n      if (selector == \"country_name\") labl = opt.country_name;else if (selector == \"state_name\") labl = opt.state_name;else if (selector == \"city_name\") labl = opt.city_name;\n      return {\n        label: labl,\n        value: opt.id\n      };\n    });\n  }\n  const changeHandler = e => {\n    setSelectedId(e.value);\n  };\n  useEffect(() => {\n    {\n      if (callback !== undefined) callback(selected_id);\n    }\n  }, [selected_id]);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    onChange: changeHandler,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(CountrySelect, \"U5z0PfB0Yl5OB9MCJvVgs52BQTI=\");\n_c = CountrySelect;\nvar _c;\n$RefreshReg$(_c, \"CountrySelect\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Select","jsxDEV","_jsxDEV","CountrySelect","countyList","selector","callback","_s","selected_id","setSelectedId","options","data","console","log","map","opt","index","labl","country_name","state_name","city_name","label","value","id","changeHandler","e","undefined","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Documents/user-dashboard-frontend/src/components/CountrySelect.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\nimport Select from \"react-select\";\n// import countryList from \"react-select-country-list\";\n\nexport const CountrySelect = ({ countyList, selector, callback }) => {\n  const [selected_id, setSelectedId] = useState(\"\");\n  let options; // = useMemo(() => countryList().getData(), []);\n\n  if (countyList && countyList.data) {\n    console.log(\"Save to map\");\n    options = countyList.data.map((opt, index) => {\n      let labl;\n      if (selector == \"country_name\") labl = opt.country_name;\n      else if (selector == \"state_name\") labl = opt.state_name;\n      else if (selector == \"city_name\") labl = opt.city_name;\n      return {\n        label: labl,\n        value: opt.id,\n      };\n    });\n  }\n  const changeHandler = (e) => {\n    setSelectedId(e.value);\n  };\n  useEffect(() => {\n    {\n      if (callback !== undefined) callback(selected_id);\n    }\n  }, [selected_id]);\n  return <Select onChange={changeHandler} options={options} />;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAC3D,OAAOC,MAAM,MAAM,cAAc;AACjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACjD,IAAIa,OAAO,CAAC,CAAC;;EAEb,IAAIN,UAAU,IAAIA,UAAU,CAACO,IAAI,EAAE;IACjCC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BH,OAAO,GAAGN,UAAU,CAACO,IAAI,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC5C,IAAIC,IAAI;MACR,IAAIZ,QAAQ,IAAI,cAAc,EAAEY,IAAI,GAAGF,GAAG,CAACG,YAAY,CAAC,KACnD,IAAIb,QAAQ,IAAI,YAAY,EAAEY,IAAI,GAAGF,GAAG,CAACI,UAAU,CAAC,KACpD,IAAId,QAAQ,IAAI,WAAW,EAAEY,IAAI,GAAGF,GAAG,CAACK,SAAS;MACtD,OAAO;QACLC,KAAK,EAAEJ,IAAI;QACXK,KAAK,EAAEP,GAAG,CAACQ;MACb,CAAC;IACH,CAAC,CAAC;EACJ;EACA,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3BhB,aAAa,CAACgB,CAAC,CAACH,KAAK,CAAC;EACxB,CAAC;EACDvB,SAAS,CAAC,MAAM;IACd;MACE,IAAIO,QAAQ,KAAKoB,SAAS,EAAEpB,QAAQ,CAACE,WAAW,CAAC;IACnD;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,oBAAON,OAAA,CAACF,MAAM;IAAC2B,QAAQ,EAAEH,aAAc;IAACd,OAAO,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACxB,EAAA,CA1BWJ,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}